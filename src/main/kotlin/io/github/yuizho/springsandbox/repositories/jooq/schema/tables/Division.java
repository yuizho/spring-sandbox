/*
 * This file is generated by jOOQ.
 */
package io.github.yuizho.springsandbox.repositories.jooq.schema.tables;


import io.github.yuizho.springsandbox.repositories.jooq.schema.Indexes;
import io.github.yuizho.springsandbox.repositories.jooq.schema.Keys;
import io.github.yuizho.springsandbox.repositories.jooq.schema.Test;
import io.github.yuizho.springsandbox.repositories.jooq.schema.tables.records.DivisionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Division extends TableImpl<DivisionRecord> {

    private static final long serialVersionUID = -682727541;

    /**
     * The reference instance of <code>test.division</code>
     */
    public static final Division DIVISION = new Division();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DivisionRecord> getRecordType() {
        return DivisionRecord.class;
    }

    /**
     * The column <code>test.division.id</code>.
     */
    public final TableField<DivisionRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>test.division.name</code>.
     */
    public final TableField<DivisionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * Create a <code>test.division</code> table reference
     */
    public Division() {
        this(DSL.name("division"), null);
    }

    /**
     * Create an aliased <code>test.division</code> table reference
     */
    public Division(String alias) {
        this(DSL.name(alias), DIVISION);
    }

    /**
     * Create an aliased <code>test.division</code> table reference
     */
    public Division(Name alias) {
        this(alias, DIVISION);
    }

    private Division(Name alias, Table<DivisionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Division(Name alias, Table<DivisionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Division(Table<O> child, ForeignKey<O, DivisionRecord> key) {
        super(child, key, DIVISION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DIVISION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DivisionRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_DIVISION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DivisionRecord> getPrimaryKey() {
        return Keys.KEY_DIVISION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DivisionRecord>> getKeys() {
        return Arrays.<UniqueKey<DivisionRecord>>asList(Keys.KEY_DIVISION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Division as(String alias) {
        return new Division(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Division as(Name alias) {
        return new Division(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Division rename(String name) {
        return new Division(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Division rename(Name name) {
        return new Division(name, null);
    }
}
